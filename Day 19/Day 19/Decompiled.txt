#ip 3
#[A, B, C, ip, D, E]
[ 0] addi 3 16 3 # ip = ip + 16                 // jump to 17

# Part 1
[ 1] seti 1 9 5 # E = 1                         // E = 1
[ 2] seti 1 1 4 # D = 1                         // D = 1

[ 3] mulr 5 4 2 # C = E * D                     // C = 1
[ 4] eqrr 2 1 2 # if (C == B) C = 1 else C = 0  // C = 0
[ 5] addr 2 3 3 # ip = C + ip                   // skip next instr if C = 1
[ 6] addi 3 1 3 # ip = ip + 1                   // jump to 8
[ 7] addr 5 0 0 # A = E + A                     // A = 1 :(

[ 8] addi 4 1 4 # D = D + 1                     // D = 2
[ 9] gtrr 4 1 2 # if (D > B) C = 1 else C = 0   // C = 0
[10] addr 3 2 3 # ip = ip + C                   // skip next instr if C = 1
[11] seti 2 3 3 # ip = 2                        // jump to 3
[12] addi 5 1 5 # E = E + 1                     // E = 2
[13] gtrr 5 1 2 # if (E > B) C = 1 else C = 1   // 
[14] addr 2 3 3 # ip = C + ip                   // skip next instr if C = 1
[15] seti 1 4 3 # ip = 1                        // jump to 2
[16] mulr 3 3 3 # ip = ip (16) * ip (16) --> HALT

[17] addi 1 2 1  # B = B + 2            // B = 2
[18] mulr 1 1 1  # B = B * B            // B = 4
[19] mulr 3 1 1  # B = B * ip(19)       // B = 76
[20] muli 1 11 1 # B = B * 11           // B = 836
[21] addi 2 2 2  # C = C + 2            // C = 2
[22] mulr 2 3 2  # C = C * ip (22)      // C = 44
[23] addi 2 20 2 # C = C + 20           // C = 64
[24] addr 1 2 1  # B = B + C            // B = 900
[25] addr 3 0 3  # ip = ip + A          // part 2: jump to 27
[26] seti 0 4 3  # ip = 0               // jump to 1

# Part 2
[27] setr 3 9 2  # C = ip (27)          // C = 27
[28] mulr 2 3 2  # C = C * ip (28)      // C = 756
[29] addr 3 2 2  # C = ip (29) + C      // C = 785
[30] mulr 3 2 2  # C = ip (30) * C      // C = 23550
[31] muli 2 14 2 # C = C * 14           // C = 329700
[32] mulr 2 3 2  # C = C * ip(32)       // C = 10_550_400
[33] addr 1 2 1  # B = B + C            // B = 10_551_300
[34] seti 0 6 0  # A = 0                // A = 0
[35] seti 0 0 3  # ip = 0               // jump to 1



=======

#ip 0
#[ip, A, B, C, D, E]
[0] seti 5 0 1 # A = 5
[1] seti 6 0 2 # B = 6
[2] addi 0 1 0 # ip = ip + 1
[3] addr 1 2 3 # C = A + B
[4] setr 1 0 0 # ip = A
[5] seti 8 0 4 # D = 8
[6] seti 9 0 5 # E = 9

